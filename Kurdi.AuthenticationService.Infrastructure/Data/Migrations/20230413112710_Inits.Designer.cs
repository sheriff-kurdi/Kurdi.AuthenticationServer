// <auto-generated />
using System;
using Kurdi.AuthenticationService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kurdi.AuthenticationService.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230413112710_Inits")]
    partial class Inits
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuthorityUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("AuthoritiesProjectIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("AuthoritiesModuleName")
                        .HasColumnType("text");

                    b.Property<string>("AuthoritiesActionName")
                        .HasColumnType("text");

                    b.HasKey("UserId", "AuthoritiesProjectIdentifier", "AuthoritiesModuleName", "AuthoritiesActionName");

                    b.HasIndex("AuthoritiesProjectIdentifier", "AuthoritiesModuleName", "AuthoritiesActionName");

                    b.ToTable("AuthorityUser");
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Action", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("action_name");

                    b.HasKey("Name");

                    b.ToTable("actions", (string)null);
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Authority", b =>
                {
                    b.Property<string>("ProjectIdentifier")
                        .HasColumnType("text")
                        .HasColumnName("project_identifier");

                    b.Property<string>("ModuleName")
                        .HasColumnType("text")
                        .HasColumnName("module_name");

                    b.Property<string>("ActionName")
                        .HasColumnType("text")
                        .HasColumnName("action_name");

                    b.Property<string>("ProjectId")
                        .HasColumnType("text");

                    b.HasKey("ProjectIdentifier", "ModuleName", "ActionName");

                    b.HasIndex("ActionName");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ModuleName", "ProjectIdentifier");

                    b.ToTable("authorities", (string)null);
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Module", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ProjectIdentifier")
                        .HasColumnType("text")
                        .HasColumnName("project_identifier");

                    b.HasKey("Name", "ProjectIdentifier");

                    b.HasIndex("ProjectIdentifier");

                    b.ToTable("modules", (string)null);
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("AuthorityUser", b =>
                {
                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.Authorities.Authority", null)
                        .WithMany()
                        .HasForeignKey("AuthoritiesProjectIdentifier", "AuthoritiesModuleName", "AuthoritiesActionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Authority", b =>
                {
                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.Authorities.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.Authorities.Project", null)
                        .WithMany("Authorities")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.Authorities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.Authorities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleName", "ProjectIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Module");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Module", b =>
                {
                    b.HasOne("Kurdi.AuthenticationService.Core.Entities.Authorities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kurdi.AuthenticationService.Core.Entities.Authorities.Project", b =>
                {
                    b.Navigation("Authorities");
                });
#pragma warning restore 612, 618
        }
    }
}
